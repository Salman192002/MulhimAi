const express = require("express");
const cors = require("cors");
const axios = require("axios");
require("dotenv").config();

const app = express();
app.use(express.json());
app.use(cors());

// โ ุงุณุชุฎุฏู ููุชุงุญ Google Gemini API
const API_KEY = process.env.GOOGLE_GEMINI_API_KEY || "AIzaSyDjgsPIYh0XxyFwsFHJUyILxvBR9WnbfYc";

// โ ุชุนูููุงุช ููููู AI ุนูุฏ ุจุฏุก ุงููุญุงุฏุซุฉ
const SYSTEM_PROMPT = "ุฃูุช ููููู AIุ ูุณุงุนุฏ ุฃูุงุฏููู ุฐูู. ูููุชู ุชูุฏูู ุงููุตุงุฆุญ ููููุงุฏุฑ ุงูุชุนููููุฉ ุญูู ุงูุชุฏุฑูุณุ ุงูุฃุจุญุงุซุ ูุชุทููุฑ ุงูููุงุฑุงุช ุงูุฃูุงุฏูููุฉ. ุชุญุฏุซ ุจุฃุณููุจ ุฏุงุนู ูุงุญุชุฑุงูู.";

// โ ุงููุญุงุฏุซุฉ ุชุจุฏุฃ ุจุชุนูููุงุช ุงููุธุงู
let conversationHistory = [{ role: "user", parts: [{ text: SYSTEM_PROMPT }] }];

app.post("/chat", async (req, res) => {
    console.log("๐ฉ ุทูุจ ุฌุฏูุฏ ูุตู ูู ุงููุชุตูุญ:", req.body);

    try {
        const userInput = req.body.text;
        console.log("๐ ุงููุต ุงูููุฑุณู ูุชุญูููู:", userInput);

        // โ ุฅุถุงูุฉ ุฅุฏุฎุงู ุงููุณุชุฎุฏู ุฅูู ุงููุญุงุฏุซุฉ
        conversationHistory.push({ role: "user", parts: [{ text: userInput }] });

        // โ ุฅุฑุณุงู ุงูุทูุจ ุฅูู Google Gemini API
        const response = await axios.post(
            `https://generativelanguage.googleapis.com/v1/models/gemini-1.5-flash:generateContent?key=${API_KEY}`,
            { contents: conversationHistory },
            { headers: { "Content-Type": "application/json" } }
        );

        // โ ุงุณุชุฎุฑุงุฌ ุงูุฑุฏ ูู API
        if (response.data && response.data.candidates && response.data.candidates.length > 0) {
            const aiResponse = response.data.candidates[0].content.parts[0].text.trim();

            // โ ุฅุถุงูุฉ ุฑุฏ ุงููุณุงุนุฏ ุฅูู ุงููุญุงุฏุซุฉ
            conversationHistory.push({ role: "assistant", parts: [{ text: aiResponse }] });

            console.log("โ ุงุณุชุฌุงุจุฉ Google Gemini API:", aiResponse);
            res.json({ advice: aiResponse });
        } else {
            throw new Error("โ ุงุณุชุฌุงุจุฉ ุบูุฑ ูุชููุนุฉ ูู Google Gemini API.");
        }

    } catch (error) {
        console.error("โ ุฎุทุฃ ุฃุซูุงุก ุงูุงุชุตุงู ุจู Google Gemini API:", error.response ? error.response.data : error.message);
        res.status(500).json({ error: "ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ูุนุงูุฌุฉ ุงูุทูุจ.", details: error.response ? error.response.data : error.message });
    }
});

const PORT = 5000;
app.listen(PORT, () => console.log(`๐ ุงูุฎุงุฏู ูุนูู ุนูู ุงููููุฐ ${PORT}`));
